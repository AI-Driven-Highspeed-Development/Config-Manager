{
    "module_name": "config_manager",
    "module_description": {
        "overview": "Singleton JSON configuration manager with automatic code generation.",
        "key_features": [
            "Auto-generates config key classes from JSON on initialization",
            "Singleton pattern for single application instance",
            "PathResolver and Logger integration",
            "Type-safe config access via generated dataclasses",
            "Automatic nested structure handling",
            "Runtime config loading/saving"
        ]
    },
    "usage_examples": {
        "config_key_generation": "cm = ConfigManager(config_path='.config');",
        "initialization": "cm = ConfigManager(config_path='.config', verbose=True)",
        "save_config": "cm.save_config({'api_key': 'your_key', 'debug_mode': True})",
        "access_values": "api_key = cm.config.api_key",
        "nested_config": "cm.save_config({'database': {'host': 'localhost', 'port': 5432}})",
        "singleton": "cm1 = ConfigManager(); cm2 = ConfigManager()  # Same instance"
    },
    "warning": {
        "config_regeneration": "Manual .config modifications require ConfigManager reinitialization to regenerate config key classes. Use: 1. 'python adhd_cli.py refresh config_manager' or 2. Initialize ConfigManager (cm = ConfigManager()). Singleton ensures updated keys across application."
    },
    "related_files_outside_module_folder": {
        ".config": {
            "description": "Main configuration file.",
            "path": "./.config"
        }
    }
}